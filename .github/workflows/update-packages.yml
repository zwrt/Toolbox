name: Update Packages

on:
  workflow_dispatch:
  schedule:
    - cron: 30 * * * *
  watch:
    types: started

env:
  BRANCH: master
  SCRIPT: file/packages.sh

jobs:
  Update:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 显式声明写入权限

    steps:
    - name: Checkout
      uses: actions/checkout@v4  # 使用最新稳定版

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 0
        keep_minimum_runs: 3

    - name: Set Git Identity
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        sudo timedatectl set-timezone "Asia/Shanghai"

    - name: Update Packages
      run: |
        cd "$GITHUB_WORKSPACE"
        chmod +x "$SCRIPT"
        # 克隆时添加认证信息
        git clone -b "$BRANCH" "https://${{ github.actor }}:${{ secrets.GH_TOKEN }}@github.com/zwrt/openwrt-packages.git"
        cd openwrt-packages
        git rm -r --cache . >/dev/null 2>&1 || true
        find . -mindepth 1 -maxdepth 1 ! -name "diy" -exec rm -rf {} + >/dev/null 2>&1 || true
        "$GITHUB_WORKSPACE/$SCRIPT"
        echo "FILE_PATH=$PWD" >> "$GITHUB_ENV"

    - name: Check for changes
      id: check_changes
      run: |
        cd "$FILE_PATH"
        if [ -n "$(git status --porcelain)" ]; then
          echo "has_changes=true" >> "$GITHUB_OUTPUT"
          echo "🔄 检测到文件变动"
        else
          echo "has_changes=false" >> "$GITHUB_OUTPUT"
          echo "✅ 无文件变动"
        fi

    - name: Upload Packages
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        cd "$FILE_PATH"
        Emoji=("🎉" "🤞" "✨" "🎁" "🎈" "🎄" "🎨" "💋" "🍓" "🍕" "🍉" "💐" "🌴" "🚀" "🛸" "🗽" "⛅" "🌈" "🔥" "⛄" "🐶" "🏅" "🦄" "🐤")
        git add .
        git commit -m "${Emoji[$((RANDOM % ${#Emoji[@]}))]} Sync $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')${Emoji[$((RANDOM % ${#Emoji[@]}))]}"
        # 使用认证信息推送
        git push --quiet "https://${{ github.actor }}:${{ secrets.GH_TOKEN }}@github.com/zwrt/openwrt-packages.git" HEAD:"$BRANCH"
      env:
        # 确保使用正确的token
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
